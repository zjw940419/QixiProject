<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.mapper.TrainDataMapper">
  <resultMap id="BaseResultMap" type="com.mmall.QixiPojo.TrainData">
    <constructor>
      <idArg column="train_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="temp_max" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="temp_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gapmin_val" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gap_min" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lgap_max" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lgap_min" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rgap_max" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rgap_min" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="rslot_max" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rslot_min" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lslot_max" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lslot_min" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="train_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    train_id, temp_max, temp_average, gapmin_val, gap_min, lgap_max, lgap_min, rgap_max, 
    rgap_min, rgap_average, lgap_average, rslot_max, rslot_min, lslot_max, lslot_min, 
    rslot_average, lslot_average, train_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_data
    where train_id = #{trainId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train_data
    where train_id = #{trainId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data (train_id, temp_max, temp_average, 
      gapmin_val, gap_min, lgap_max, 
      lgap_min, rgap_max, rgap_min, 
      rgap_average, lgap_average, rslot_max, 
      rslot_min, lslot_max, lslot_min, 
      rslot_average, lslot_average, train_date
      )
    values (#{trainId,jdbcType=BIGINT}, #{tempMax,jdbcType=INTEGER}, #{tempAverage,jdbcType=DOUBLE}, 
      #{gapminVal,jdbcType=DOUBLE}, #{gapMin,jdbcType=INTEGER}, #{lgapMax,jdbcType=INTEGER}, 
      #{lgapMin,jdbcType=INTEGER}, #{rgapMax,jdbcType=INTEGER}, #{rgapMin,jdbcType=INTEGER}, 
      #{rgapAverage,jdbcType=DOUBLE}, #{lgapAverage,jdbcType=DOUBLE}, #{rslotMax,jdbcType=INTEGER}, 
      #{rslotMin,jdbcType=INTEGER}, #{lslotMax,jdbcType=INTEGER}, #{lslotMin,jdbcType=INTEGER}, 
      #{rslotAverage,jdbcType=DOUBLE}, #{lslotAverage,jdbcType=DOUBLE}, #{trainDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        train_id,
      </if>
      <if test="tempMax != null">
        temp_max,
      </if>
      <if test="tempAverage != null">
        temp_average,
      </if>
      <if test="gapminVal != null">
        gapmin_val,
      </if>
      <if test="gapMin != null">
        gap_min,
      </if>
      <if test="lgapMax != null">
        lgap_max,
      </if>
      <if test="lgapMin != null">
        lgap_min,
      </if>
      <if test="rgapMax != null">
        rgap_max,
      </if>
      <if test="rgapMin != null">
        rgap_min,
      </if>
      <if test="rgapAverage != null">
        rgap_average,
      </if>
      <if test="lgapAverage != null">
        lgap_average,
      </if>
      <if test="rslotMax != null">
        rslot_max,
      </if>
      <if test="rslotMin != null">
        rslot_min,
      </if>
      <if test="lslotMax != null">
        lslot_max,
      </if>
      <if test="lslotMin != null">
        lslot_min,
      </if>
      <if test="rslotAverage != null">
        rslot_average,
      </if>
      <if test="lslotAverage != null">
        lslot_average,
      </if>
      <if test="trainDate != null">
        train_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        #{trainId,jdbcType=BIGINT},
      </if>
      <if test="tempMax != null">
        #{tempMax,jdbcType=INTEGER},
      </if>
      <if test="tempAverage != null">
        #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        #{gapMin,jdbcType=INTEGER},
      </if>
      <if test="lgapMax != null">
        #{lgapMax,jdbcType=INTEGER},
      </if>
      <if test="lgapMin != null">
        #{lgapMin,jdbcType=INTEGER},
      </if>
      <if test="rgapMax != null">
        #{rgapMax,jdbcType=INTEGER},
      </if>
      <if test="rgapMin != null">
        #{rgapMin,jdbcType=INTEGER},
      </if>
      <if test="rgapAverage != null">
        #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        #{rslotMax,jdbcType=INTEGER},
      </if>
      <if test="rslotMin != null">
        #{rslotMin,jdbcType=INTEGER},
      </if>
      <if test="lslotMax != null">
        #{lslotMax,jdbcType=INTEGER},
      </if>
      <if test="lslotMin != null">
        #{lslotMin,jdbcType=INTEGER},
      </if>
      <if test="rslotAverage != null">
        #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    <set>
      <if test="tempMax != null">
        temp_max = #{tempMax,jdbcType=INTEGER},
      </if>
      <if test="tempAverage != null">
        temp_average = #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        gap_min = #{gapMin,jdbcType=INTEGER},
      </if>
      <if test="lgapMax != null">
        lgap_max = #{lgapMax,jdbcType=INTEGER},
      </if>
      <if test="lgapMin != null">
        lgap_min = #{lgapMin,jdbcType=INTEGER},
      </if>
      <if test="rgapMax != null">
        rgap_max = #{rgapMax,jdbcType=INTEGER},
      </if>
      <if test="rgapMin != null">
        rgap_min = #{rgapMin,jdbcType=INTEGER},
      </if>
      <if test="rgapAverage != null">
        rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        rslot_max = #{rslotMax,jdbcType=INTEGER},
      </if>
      <if test="rslotMin != null">
        rslot_min = #{rslotMin,jdbcType=INTEGER},
      </if>
      <if test="lslotMax != null">
        lslot_max = #{lslotMax,jdbcType=INTEGER},
      </if>
      <if test="lslotMin != null">
        lslot_min = #{lslotMin,jdbcType=INTEGER},
      </if>
      <if test="rslotAverage != null">
        rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        train_date = #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where train_id = #{trainId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    set temp_max = #{tempMax,jdbcType=INTEGER},
      temp_average = #{tempAverage,jdbcType=DOUBLE},
      gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      gap_min = #{gapMin,jdbcType=INTEGER},
      lgap_max = #{lgapMax,jdbcType=INTEGER},
      lgap_min = #{lgapMin,jdbcType=INTEGER},
      rgap_max = #{rgapMax,jdbcType=INTEGER},
      rgap_min = #{rgapMin,jdbcType=INTEGER},
      rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      rslot_max = #{rslotMax,jdbcType=INTEGER},
      rslot_min = #{rslotMin,jdbcType=INTEGER},
      lslot_max = #{lslotMax,jdbcType=INTEGER},
      lslot_min = #{lslotMin,jdbcType=INTEGER},
      rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      train_date = #{trainDate,jdbcType=TIMESTAMP}
    where train_id = #{trainId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.mmall.QixiPojo.TrainData">
    <constructor>
      <idArg column="train_id" javaType="byte[]" jdbcType="BINARY" />
      <arg column="temp_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="temp_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gapmin_val" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lgap_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lgap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="rslot_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rslot_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lslot_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lslot_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="train_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    train_id, temp_max, temp_average, gapmin_val, gap_min, lgap_max, lgap_min, rgap_max, 
    rgap_min, rgap_average, lgap_average, rslot_max, rslot_min, lslot_max, lslot_min, 
    rslot_average, lslot_average, train_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="byte[]" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_data
    where train_id = #{trainId,jdbcType=BINARY}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="byte[]">
    delete from train_data
    where train_id = #{trainId,jdbcType=BINARY}
  </delete>
  <insert id="insert" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data (train_id, temp_max, temp_average, 
      gapmin_val, gap_min, lgap_max, 
      lgap_min, rgap_max, rgap_min, 
      rgap_average, lgap_average, rslot_max, 
      rslot_min, lslot_max, lslot_min, 
      rslot_average, lslot_average, train_date
      )
    values (#{trainId,jdbcType=BINARY}, #{tempMax,jdbcType=TINYINT}, #{tempAverage,jdbcType=DOUBLE}, 
      #{gapminVal,jdbcType=DOUBLE}, #{gapMin,jdbcType=TINYINT}, #{lgapMax,jdbcType=TINYINT}, 
      #{lgapMin,jdbcType=TINYINT}, #{rgapMax,jdbcType=TINYINT}, #{rgapMin,jdbcType=TINYINT}, 
      #{rgapAverage,jdbcType=DOUBLE}, #{lgapAverage,jdbcType=DOUBLE}, #{rslotMax,jdbcType=TINYINT}, 
      #{rslotMin,jdbcType=TINYINT}, #{lslotMax,jdbcType=TINYINT}, #{lslotMin,jdbcType=TINYINT}, 
      #{rslotAverage,jdbcType=DOUBLE}, #{lslotAverage,jdbcType=DOUBLE}, #{trainDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        train_id,
      </if>
      <if test="tempMax != null">
        temp_max,
      </if>
      <if test="tempAverage != null">
        temp_average,
      </if>
      <if test="gapminVal != null">
        gapmin_val,
      </if>
      <if test="gapMin != null">
        gap_min,
      </if>
      <if test="lgapMax != null">
        lgap_max,
      </if>
      <if test="lgapMin != null">
        lgap_min,
      </if>
      <if test="rgapMax != null">
        rgap_max,
      </if>
      <if test="rgapMin != null">
        rgap_min,
      </if>
      <if test="rgapAverage != null">
        rgap_average,
      </if>
      <if test="lgapAverage != null">
        lgap_average,
      </if>
      <if test="rslotMax != null">
        rslot_max,
      </if>
      <if test="rslotMin != null">
        rslot_min,
      </if>
      <if test="lslotMax != null">
        lslot_max,
      </if>
      <if test="lslotMin != null">
        lslot_min,
      </if>
      <if test="rslotAverage != null">
        rslot_average,
      </if>
      <if test="lslotAverage != null">
        lslot_average,
      </if>
      <if test="trainDate != null">
        train_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        #{trainId,jdbcType=BINARY},
      </if>
      <if test="tempMax != null">
        #{tempMax,jdbcType=TINYINT},
      </if>
      <if test="tempAverage != null">
        #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        #{gapMin,jdbcType=TINYINT},
      </if>
      <if test="lgapMax != null">
        #{lgapMax,jdbcType=TINYINT},
      </if>
      <if test="lgapMin != null">
        #{lgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapMax != null">
        #{rgapMax,jdbcType=TINYINT},
      </if>
      <if test="rgapMin != null">
        #{rgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapAverage != null">
        #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        #{rslotMax,jdbcType=TINYINT},
      </if>
      <if test="rslotMin != null">
        #{rslotMin,jdbcType=TINYINT},
      </if>
      <if test="lslotMax != null">
        #{lslotMax,jdbcType=TINYINT},
      </if>
      <if test="lslotMin != null">
        #{lslotMin,jdbcType=TINYINT},
      </if>
      <if test="rslotAverage != null">
        #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    <set>
      <if test="tempMax != null">
        temp_max = #{tempMax,jdbcType=TINYINT},
      </if>
      <if test="tempAverage != null">
        temp_average = #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        gap_min = #{gapMin,jdbcType=TINYINT},
      </if>
      <if test="lgapMax != null">
        lgap_max = #{lgapMax,jdbcType=TINYINT},
      </if>
      <if test="lgapMin != null">
        lgap_min = #{lgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapMax != null">
        rgap_max = #{rgapMax,jdbcType=TINYINT},
      </if>
      <if test="rgapMin != null">
        rgap_min = #{rgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapAverage != null">
        rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        rslot_max = #{rslotMax,jdbcType=TINYINT},
      </if>
      <if test="rslotMin != null">
        rslot_min = #{rslotMin,jdbcType=TINYINT},
      </if>
      <if test="lslotMax != null">
        lslot_max = #{lslotMax,jdbcType=TINYINT},
      </if>
      <if test="lslotMin != null">
        lslot_min = #{lslotMin,jdbcType=TINYINT},
      </if>
      <if test="rslotAverage != null">
        rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        train_date = #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where train_id = #{trainId,jdbcType=BINARY}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    set temp_max = #{tempMax,jdbcType=TINYINT},
      temp_average = #{tempAverage,jdbcType=DOUBLE},
      gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      gap_min = #{gapMin,jdbcType=TINYINT},
      lgap_max = #{lgapMax,jdbcType=TINYINT},
      lgap_min = #{lgapMin,jdbcType=TINYINT},
      rgap_max = #{rgapMax,jdbcType=TINYINT},
      rgap_min = #{rgapMin,jdbcType=TINYINT},
      rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      rslot_max = #{rslotMax,jdbcType=TINYINT},
      rslot_min = #{rslotMin,jdbcType=TINYINT},
      lslot_max = #{lslotMax,jdbcType=TINYINT},
      lslot_min = #{lslotMin,jdbcType=TINYINT},
      rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      train_date = #{trainDate,jdbcType=TIMESTAMP}
    where train_id = #{trainId,jdbcType=BINARY}
  </update>
  <resultMap id="BaseResultMap" type="com.mmall.QixiPojo.TrainData">
    <constructor>
      <idArg column="train_id" javaType="byte[]" jdbcType="BINARY" />
      <arg column="temp_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="temp_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gapmin_val" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="gap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lgap_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lgap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lgap_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="rslot_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rslot_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lslot_max" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="lslot_min" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="rslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="lslot_average" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="train_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    train_id, temp_max, temp_average, gapmin_val, gap_min, lgap_max, lgap_min, rgap_max, 
    rgap_min, rgap_average, lgap_average, rslot_max, rslot_min, lslot_max, lslot_min, 
    rslot_average, lslot_average, train_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="byte[]" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_data
    where train_id = #{trainId,jdbcType=BINARY}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="byte[]">
    delete from train_data
    where train_id = #{trainId,jdbcType=BINARY}
  </delete>
  <insert id="insert" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data (train_id, temp_max, temp_average, 
      gapmin_val, gap_min, lgap_max, 
      lgap_min, rgap_max, rgap_min, 
      rgap_average, lgap_average, rslot_max, 
      rslot_min, lslot_max, lslot_min, 
      rslot_average, lslot_average, train_date
      )
    values (#{trainId,jdbcType=BINARY}, #{tempMax,jdbcType=TINYINT}, #{tempAverage,jdbcType=DOUBLE}, 
      #{gapminVal,jdbcType=DOUBLE}, #{gapMin,jdbcType=TINYINT}, #{lgapMax,jdbcType=TINYINT}, 
      #{lgapMin,jdbcType=TINYINT}, #{rgapMax,jdbcType=TINYINT}, #{rgapMin,jdbcType=TINYINT}, 
      #{rgapAverage,jdbcType=DOUBLE}, #{lgapAverage,jdbcType=DOUBLE}, #{rslotMax,jdbcType=TINYINT}, 
      #{rslotMin,jdbcType=TINYINT}, #{lslotMax,jdbcType=TINYINT}, #{lslotMin,jdbcType=TINYINT}, 
      #{rslotAverage,jdbcType=DOUBLE}, #{lslotAverage,jdbcType=DOUBLE}, #{trainDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.QixiPojo.TrainData">
    insert into train_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        train_id,
      </if>
      <if test="tempMax != null">
        temp_max,
      </if>
      <if test="tempAverage != null">
        temp_average,
      </if>
      <if test="gapminVal != null">
        gapmin_val,
      </if>
      <if test="gapMin != null">
        gap_min,
      </if>
      <if test="lgapMax != null">
        lgap_max,
      </if>
      <if test="lgapMin != null">
        lgap_min,
      </if>
      <if test="rgapMax != null">
        rgap_max,
      </if>
      <if test="rgapMin != null">
        rgap_min,
      </if>
      <if test="rgapAverage != null">
        rgap_average,
      </if>
      <if test="lgapAverage != null">
        lgap_average,
      </if>
      <if test="rslotMax != null">
        rslot_max,
      </if>
      <if test="rslotMin != null">
        rslot_min,
      </if>
      <if test="lslotMax != null">
        lslot_max,
      </if>
      <if test="lslotMin != null">
        lslot_min,
      </if>
      <if test="rslotAverage != null">
        rslot_average,
      </if>
      <if test="lslotAverage != null">
        lslot_average,
      </if>
      <if test="trainDate != null">
        train_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="trainId != null">
        #{trainId,jdbcType=BINARY},
      </if>
      <if test="tempMax != null">
        #{tempMax,jdbcType=TINYINT},
      </if>
      <if test="tempAverage != null">
        #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        #{gapMin,jdbcType=TINYINT},
      </if>
      <if test="lgapMax != null">
        #{lgapMax,jdbcType=TINYINT},
      </if>
      <if test="lgapMin != null">
        #{lgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapMax != null">
        #{rgapMax,jdbcType=TINYINT},
      </if>
      <if test="rgapMin != null">
        #{rgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapAverage != null">
        #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        #{rslotMax,jdbcType=TINYINT},
      </if>
      <if test="rslotMin != null">
        #{rslotMin,jdbcType=TINYINT},
      </if>
      <if test="lslotMax != null">
        #{lslotMax,jdbcType=TINYINT},
      </if>
      <if test="lslotMin != null">
        #{lslotMin,jdbcType=TINYINT},
      </if>
      <if test="rslotAverage != null">
        #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    <set>
      <if test="tempMax != null">
        temp_max = #{tempMax,jdbcType=TINYINT},
      </if>
      <if test="tempAverage != null">
        temp_average = #{tempAverage,jdbcType=DOUBLE},
      </if>
      <if test="gapminVal != null">
        gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      </if>
      <if test="gapMin != null">
        gap_min = #{gapMin,jdbcType=TINYINT},
      </if>
      <if test="lgapMax != null">
        lgap_max = #{lgapMax,jdbcType=TINYINT},
      </if>
      <if test="lgapMin != null">
        lgap_min = #{lgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapMax != null">
        rgap_max = #{rgapMax,jdbcType=TINYINT},
      </if>
      <if test="rgapMin != null">
        rgap_min = #{rgapMin,jdbcType=TINYINT},
      </if>
      <if test="rgapAverage != null">
        rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="lgapAverage != null">
        lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      </if>
      <if test="rslotMax != null">
        rslot_max = #{rslotMax,jdbcType=TINYINT},
      </if>
      <if test="rslotMin != null">
        rslot_min = #{rslotMin,jdbcType=TINYINT},
      </if>
      <if test="lslotMax != null">
        lslot_max = #{lslotMax,jdbcType=TINYINT},
      </if>
      <if test="lslotMin != null">
        lslot_min = #{lslotMin,jdbcType=TINYINT},
      </if>
      <if test="rslotAverage != null">
        rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="lslotAverage != null">
        lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      </if>
      <if test="trainDate != null">
        train_date = #{trainDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where train_id = #{trainId,jdbcType=BINARY}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.QixiPojo.TrainData">
    update train_data
    set temp_max = #{tempMax,jdbcType=TINYINT},
      temp_average = #{tempAverage,jdbcType=DOUBLE},
      gapmin_val = #{gapminVal,jdbcType=DOUBLE},
      gap_min = #{gapMin,jdbcType=TINYINT},
      lgap_max = #{lgapMax,jdbcType=TINYINT},
      lgap_min = #{lgapMin,jdbcType=TINYINT},
      rgap_max = #{rgapMax,jdbcType=TINYINT},
      rgap_min = #{rgapMin,jdbcType=TINYINT},
      rgap_average = #{rgapAverage,jdbcType=DOUBLE},
      lgap_average = #{lgapAverage,jdbcType=DOUBLE},
      rslot_max = #{rslotMax,jdbcType=TINYINT},
      rslot_min = #{rslotMin,jdbcType=TINYINT},
      lslot_max = #{lslotMax,jdbcType=TINYINT},
      lslot_min = #{lslotMin,jdbcType=TINYINT},
      rslot_average = #{rslotAverage,jdbcType=DOUBLE},
      lslot_average = #{lslotAverage,jdbcType=DOUBLE},
      train_date = #{trainDate,jdbcType=TIMESTAMP}
    where train_id = #{trainId,jdbcType=BINARY}
  </update>


  <select id="findByTrainDateBetween" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from train_data
    where train_date BETWEEN #{pre} and #{after}
  </select>
</mapper>